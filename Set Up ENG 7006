#!/bin/bash
# set up our sudo
echo "Installing ENG 7006 software. This script will need just a little bit of babysitting, but it shouldn't take long. Let's start with an administrator password."

sudo echo "Starting install scripts."

# install the xcode cli tools, and a little applescript to avoid having to click buttons
echo "Installing XCode CLI tools..."
xcode-select --install
sleep 1
osascript <<EOD
  tell application "System Events"
    tell process "Install Command Line Developer Tools"
      keystroke return
      click button "Agree" of window "License Agreement"
    end tell
  end tell
EOD
echo "Installed XCode CLI tools."

# download and install Homebrew
echo "Installing Homebrew..."
ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
echo "Installed Homebrew."

# download Homebrew Cask
#echo "Installing Cask..."
#brew install caskroom/cask/brew-cask
#echo "Installed Cask."

# cask-install our five main gui apps;
echo "Installing programming environment apps..."
# we may have to enter an admin password at this stage
echo "Installing Google Chrome."
#brew cask install google-chrome
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/Google\ Chrome.app /Applications

echo "Installing Atom."
#brew cask install atom
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/Atom.app /Applications

echo "Installing GitHub Desktop."
#brew cask install github-desktop
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/GitHub\ Desktop.app /Applications

echo "Installing Slack."
#brew cask install slack
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/Slack.app /Applications

echo "Installing p5.js."
#brew cask install p5
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/p5.app /Applications

echo "Installing Flux."
#brew cask install flux
cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/Flux.app /Applications

echo "Installed programming environment apps."

echo "Installing other CLI tools..."
# install other CLI tools
echo "Installing node.js."
brew install node
echo "Installing the Heroku Toolbelt."
brew install heroku-toolbelt
echo "Installed other CLI tools."

echo "Installing and setting up Ruby environment."
# install rbenv
echo "Installing rbenv and ruby-build."
brew install rbenv ruby-build

# set the admin user's bash profile to work with rbenv, just because
echo "Setting up admin user rbenv environment."
echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
echo 'eval "$(rbenv init -)"' >> ~/.bash_profile

# creating the ENG 7006 user
echo "Creating the ENG 7006 user."
username=eng7006
realname="ENG 7006"
password="eng7006!"

maxid=$(dscl . -list /Users UniqueID | awk '{print $2}' | sort -ug | tail -1)
newid=$((maxid+1))

sudo dscl . -create /Users/$username
sudo dscl . -create /Users/$username UserShell /bin/bash
sudo dscl . -create /Users/$username RealName "$realname"
sudo dscl . -create /Users/$username UniqueID "$newid"
sudo dscl . -create /Users/$username PrimaryGroupID 20
sudo dscl . -create /Users/$username NFSHomeDirectory /Users/$username

dscl . -passwd /Users/$username $password

dseditgroup -o edit -t user -a $username staff

cp -R /System/Library/User\ Template/English.lproj /Users/$username
chown -R $username:staff /Users/$username

echo "Setting up ENG 7006 user rbenv environment."
(echo 'export PATH="$HOME/.rbenv/bin:$PATH"'
 echo 'eval "$(rbenv init -)"') | sudo tee -a  /Users/eng7006/.bash_profile >/dev/null

echo "Logging in as eng7006."
sudo -i -u eng7006 /bin/bash <<- EOF

  # copy standard Atom settings across
  cp -R /Volumes/Install\ OS\ X\ El\ Capitan/Atom\ Settings ~/.atom

  # create a folder with ENG 7006 GUI apps on the ENG 7006 User desktop
  cp -R /Volumes/Install\ OS\ X\ El\ Capitan/ENG\ 7006\ Apps/ ~/Desktop/

  # create symlinks/aliases for all the ENG 7006 applications
  cd ~/Desktop
  ln -s /Applications/p5.app
  mv p5.app p5
  ln -s /Applications/Atom.app
  mv Atom.app Atom
  ln -s /Applications/Google\ Chrome.app
  mv Google\ Chrome.app Chrome
  ln -s /Applications/GitHub\ Desktop.app
  mv GitHub\ Desktop.app GitHub\ Desktop
  ln -s /Applications/Slack.app
  mv Slack.app Slack
  ln -s /Applications/Flux.app
  mv Flux.app Flux

  # install ruby using rbenv
  echo "Installing and setting up Ruby 2.2.3. This will take a minute."
  rbenv install 2.2.3
  # make the ruby we use the rbenv ruby (not system ruby)
  rbenv global 2.2.3
  # make absolute sure our shell is up to date and using the right ruby
  # this is almost certainly redundant
  rbenv rehash

  echo 'gem: --no-ri --no-rdoc' > ~/.gemrc

  echo "Installing Bundler."
  gem install bundler

  echo "Installing Jekyll."
  # install jekyll (it will install with current ruby)
  gem install jekyll

  # be sure the shell is up to date
  source ~/.bash_profile

  # make sure these work the way they're supposed to
  echo "Checking installation of Ruby and Jekyll."
  echo "Ruby should be 2.2.3 (not 2.0.0!)."
  ruby -v
  echo "Jekyll should be installed at all."
  jekyll -v

EOF

echo "If everything has gone according to plan, you now have:"
echo "--A working Ruby and Jekyll installation"
echo "--The ENG 7006 development environment: p5, Atom, Chrome, GitHub Desktop, and Slack"
echo "--An installation of Flux to save your sleep and eyes"
